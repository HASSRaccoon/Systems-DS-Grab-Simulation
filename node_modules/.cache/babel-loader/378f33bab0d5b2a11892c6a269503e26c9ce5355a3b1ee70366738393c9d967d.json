{"ast":null,"code":"var _jsxFileName = \"/Users/valu/Desktop/TESTSDS/my-app/src/agents/Driver.js\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// const Driver = () => {\n\n// const search = () => {\n//   let timer;\n//   if (!passenger) {\n//     timer = setInterval(() => {\n//       const newDestination = {\n//         x: Math.floor(Math.random() * 500),\n//         y: Math.floor(Math.random() * 500),\n//       };\n//       setDestination(newDestination);\n//       if (location.x === newDestination.x && location.y === newDestination.y) {\n//         clearInterval(timer);\n//         search();\n//       }\n//     }, 5000);\n//   } else {\n//     const foundPassenger = passenger.find((p) => p.happyFactor < happyFactor);\n//     if (foundPassenger) {\n//       setDestination(foundPassenger.destination);\n//     } else {\n//       timer = setInterval(() => {\n//         const newDestination = {\n//           x: Math.floor(Math.random() * 500),\n//           y: Math.floor(Math.random() * 500),\n//         };\n//         setDestination(newDestination);\n//         if (\n//           location.x === newDestination.x &&\n//           location.y === newDestination.y\n//         ) {\n//           clearInterval(timer);\n//           search();\n//         }\n//       }, 5000);\n//     }\n//   }\n\n//   setTimeout(() => {\n//     clearInterval(timer);\n//     // check if there's still no passenger or no passenger that meets the happyFactor criteria after 10 seconds\n//     if (!passenger || !passenger.find((p) => p.happyFactor < happyFactor)) {\n//       // driver disappears\n//     }\n//   }, 10000);\n// };\n\n//   const pickup = (passenger) => {\n//     setPassenger(passenger);\n//   };\n\n//   // const deliver = () => {\n//   //   setLocation(passenger.destination);\n//   //   // passenger and driver now become a unit\n//   //   // move together on the screen to the passenger's destination\n//   //   // driver disappears after reaching the destination\n//   //   // passenger disappears\n//   //   // driver goes back to function searching\n//   // };\n\n//   const completed = () => {\n//     search();\n//   };\n\n// function Driver() {\n//   const [location, setLocation] = useState({\n//     x: Math.floor(Math.random() * 500),\n//     y: Math.floor(Math.random() * 500),\n//   });\n//   const [destination, setDestination] = useState({\n//     x: Math.floor(Math.random() * 500),\n//     y: Math.floor(Math.random() * 500),\n//   });\n\n//   const [state, setState] = useState(\"SEARCHING\");\n//   const circleRef = useRef(null);\n\n//   function search() {}\n//   useEffect(() => {\n//     const circle = circleRef.current;\n//     function updatePosition() {\n//       const dx = destination.x - location.x;\n//       const dy = destination.y - location.y;\n//       const distance = Math.sqrt(dx * dx + dy * dy);\n//       const speed = 5;\n//       const directionX = dx / distance;\n//       const directionY = dy / distance;\n//       const newPositionX = location.x + directionX * speed;\n//       const newPositionY = location.y + directionY * speed;\n//       circle.setAttribute(\"cx\", newPositionX);\n//       circle.setAttribute(\"cy\", newPositionY);\n//       if (newPositionX === destination.x && newPositionY === destination.y) {\n//         clearInterval(intervalId);\n//       }\n//     }\n\n//     const intervalId = setInterval(updatePosition, 10); // Set up a timer to update the circle's position\n\n//     return () => {\n//       clearInterval(intervalId); // Clean up the timer when the component unmounts\n//     };\n//   }, [location, destination]);\n\n//   // useEffect(() => {\n//   //   search();\n//   // }, []);\n//   return (\n//     <div\n//       className={styles.driver}\n//       style={{ top: location.y, left: location.x }}\n//     >\n//       {/* green circle */}\n//     </div>\n//   );\n// }\n\n// export default Driver;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Driver() {\n  _s();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [destination, setDestination] = useState({\n    x: 0,\n    y: 0\n  });\n  const [passenger, setPassenger] = useState(null);\n  const [happyFactor, setHappyFactor] = useState(0);\n  const [speed, setSpeed] = useState(1);\n  const ballRef = useRef(null);\n  useEffect(() => {\n    setRandomDestination();\n  }, []);\n  useEffect(() => {\n    moveTo(destination);\n  }, [destination]);\n  function setRandomDestination() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setDestination({\n      x,\n      y\n    });\n  }\n  function moveTo(destination) {\n    const ball = ballRef.current;\n    const distance = Math.sqrt((destination.x - position.x) ** 2 + (destination.y - position.y) ** 2);\n    const duration = distance / 50; // adjust the speed of the animation\n    ball.style.transition = `transform ${duration}s ease-out`;\n    const xTranslation = Math.min(destination.x - position.x, 200 - position.x - ballRef.current.offsetWidth);\n    const yTranslation = Math.min(destination.y - position.y, 200 - position.y - ballRef.current.offsetHeight);\n    ball.style.transform = `translate(${xTranslation}px, ${yTranslation}px)`;\n    setTimeout(() => {\n      setPosition({\n        x: position.x + xTranslation,\n        y: position.y + yTranslation\n      });\n      setRandomDestination();\n    }, duration * 1000);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.driver,\n      ref: ballRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(Driver, \"p0uMdld8bRGxptBsgT3A03vFpM4=\");\n_c = Driver;\nexport default Driver;\nvar _c;\n$RefreshReg$(_c, \"Driver\");","map":{"version":3,"names":["styles","React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Driver","_s","position","setPosition","x","y","destination","setDestination","passenger","setPassenger","happyFactor","setHappyFactor","speed","setSpeed","ballRef","setRandomDestination","moveTo","Math","floor","random","ball","current","distance","sqrt","duration","style","transition","xTranslation","min","offsetWidth","yTranslation","offsetHeight","transform","setTimeout","children","className","driver","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valu/Desktop/TESTSDS/my-app/src/agents/Driver.js"],"sourcesContent":["import styles from \"./styles.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// const Driver = () => {\n\n// const search = () => {\n//   let timer;\n//   if (!passenger) {\n//     timer = setInterval(() => {\n//       const newDestination = {\n//         x: Math.floor(Math.random() * 500),\n//         y: Math.floor(Math.random() * 500),\n//       };\n//       setDestination(newDestination);\n//       if (location.x === newDestination.x && location.y === newDestination.y) {\n//         clearInterval(timer);\n//         search();\n//       }\n//     }, 5000);\n//   } else {\n//     const foundPassenger = passenger.find((p) => p.happyFactor < happyFactor);\n//     if (foundPassenger) {\n//       setDestination(foundPassenger.destination);\n//     } else {\n//       timer = setInterval(() => {\n//         const newDestination = {\n//           x: Math.floor(Math.random() * 500),\n//           y: Math.floor(Math.random() * 500),\n//         };\n//         setDestination(newDestination);\n//         if (\n//           location.x === newDestination.x &&\n//           location.y === newDestination.y\n//         ) {\n//           clearInterval(timer);\n//           search();\n//         }\n//       }, 5000);\n//     }\n//   }\n\n//   setTimeout(() => {\n//     clearInterval(timer);\n//     // check if there's still no passenger or no passenger that meets the happyFactor criteria after 10 seconds\n//     if (!passenger || !passenger.find((p) => p.happyFactor < happyFactor)) {\n//       // driver disappears\n//     }\n//   }, 10000);\n// };\n\n//   const pickup = (passenger) => {\n//     setPassenger(passenger);\n//   };\n\n//   // const deliver = () => {\n//   //   setLocation(passenger.destination);\n//   //   // passenger and driver now become a unit\n//   //   // move together on the screen to the passenger's destination\n//   //   // driver disappears after reaching the destination\n//   //   // passenger disappears\n//   //   // driver goes back to function searching\n//   // };\n\n//   const completed = () => {\n//     search();\n//   };\n\n// function Driver() {\n//   const [location, setLocation] = useState({\n//     x: Math.floor(Math.random() * 500),\n//     y: Math.floor(Math.random() * 500),\n//   });\n//   const [destination, setDestination] = useState({\n//     x: Math.floor(Math.random() * 500),\n//     y: Math.floor(Math.random() * 500),\n//   });\n\n//   const [state, setState] = useState(\"SEARCHING\");\n//   const circleRef = useRef(null);\n\n//   function search() {}\n//   useEffect(() => {\n//     const circle = circleRef.current;\n//     function updatePosition() {\n//       const dx = destination.x - location.x;\n//       const dy = destination.y - location.y;\n//       const distance = Math.sqrt(dx * dx + dy * dy);\n//       const speed = 5;\n//       const directionX = dx / distance;\n//       const directionY = dy / distance;\n//       const newPositionX = location.x + directionX * speed;\n//       const newPositionY = location.y + directionY * speed;\n//       circle.setAttribute(\"cx\", newPositionX);\n//       circle.setAttribute(\"cy\", newPositionY);\n//       if (newPositionX === destination.x && newPositionY === destination.y) {\n//         clearInterval(intervalId);\n//       }\n//     }\n\n//     const intervalId = setInterval(updatePosition, 10); // Set up a timer to update the circle's position\n\n//     return () => {\n//       clearInterval(intervalId); // Clean up the timer when the component unmounts\n//     };\n//   }, [location, destination]);\n\n//   // useEffect(() => {\n//   //   search();\n//   // }, []);\n//   return (\n//     <div\n//       className={styles.driver}\n//       style={{ top: location.y, left: location.x }}\n//     >\n//       {/* green circle */}\n//     </div>\n//   );\n// }\n\n// export default Driver;\n\nfunction Driver() {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [destination, setDestination] = useState({ x: 0, y: 0 });\n  const [passenger, setPassenger] = useState(null);\n  const [happyFactor, setHappyFactor] = useState(0);\n  const [speed, setSpeed] = useState(1);\n  const ballRef = useRef(null);\n\n  useEffect(() => {\n    setRandomDestination();\n  }, []);\n\n  useEffect(() => {\n    moveTo(destination);\n  }, [destination]);\n\n  function setRandomDestination() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setDestination({ x, y });\n  }\n\n  function moveTo(destination) {\n    const ball = ballRef.current;\n    const distance = Math.sqrt(\n      (destination.x - position.x) ** 2 + (destination.y - position.y) ** 2\n    );\n    const duration = distance / 50; // adjust the speed of the animation\n    ball.style.transition = `transform ${duration}s ease-out`;\n    const xTranslation = Math.min(\n      destination.x - position.x,\n      200 - position.x - ballRef.current.offsetWidth\n    );\n    const yTranslation = Math.min(\n      destination.y - position.y,\n      200 - position.y - ballRef.current.offsetHeight\n    );\n    ball.style.transform = `translate(${xTranslation}px, ${yTranslation}px)`;\n    setTimeout(() => {\n      setPosition({\n        x: position.x + xTranslation,\n        y: position.y + yTranslation,\n      });\n      setRandomDestination();\n    }, duration * 1000);\n  }\n\n  return (\n    <div>\n      <div className={styles.driver} ref={ballRef}></div>\n    </div>\n  );\n}\n\nexport default Driver;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}