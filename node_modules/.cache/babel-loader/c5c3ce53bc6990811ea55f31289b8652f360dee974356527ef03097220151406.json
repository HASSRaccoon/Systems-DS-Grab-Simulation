{"ast":null,"code":"var _jsxFileName = \"/Users/valu/Desktop/TESTSDS/Systems-DS-Grab-Simulation/src/agents/Driver.js\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { moveTo } from \"../utils/moveTo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Driver() {\n  _s();\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [destination, setDestination] = useState({\n    x: 0,\n    y: 0\n  });\n  const [passenger, setPassenger] = useState(null);\n  const [happyFactor, setHappyFactor] = useState(0);\n  const [speed, setSpeed] = useState(1);\n  const ballRef = useRef(null);\n  useEffect(() => {\n    setRandomSpawnPosition();\n    setRandomDestination();\n  }, []);\n\n  // useEffect(() => {\n  //   moveTo(destination);\n  // }, [destination]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (position.x !== destination.x || position.y !== destination.y) {\n        moveTo(ballRef.current, position, destination, ballRef, setPosition);\n      }\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, [position, destination]);\n  function setRandomDestination() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setDestination({\n      x,\n      y\n    });\n  }\n  function setRandomSpawnPosition() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setPosition({\n      x,\n      y\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.driver,\n      ref: ballRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Driver, \"p0uMdld8bRGxptBsgT3A03vFpM4=\");\n_c = Driver;\nexport default Driver;\nvar _c;\n$RefreshReg$(_c, \"Driver\");","map":{"version":3,"names":["styles","React","useState","useEffect","useRef","moveTo","jsxDEV","_jsxDEV","Driver","_s","position","setPosition","x","y","destination","setDestination","passenger","setPassenger","happyFactor","setHappyFactor","speed","setSpeed","ballRef","setRandomSpawnPosition","setRandomDestination","intervalId","setInterval","current","clearInterval","Math","floor","random","children","className","driver","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valu/Desktop/TESTSDS/Systems-DS-Grab-Simulation/src/agents/Driver.js"],"sourcesContent":["import styles from \"./styles.module.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { moveTo } from \"../utils/moveTo\";\n\nfunction Driver() {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [destination, setDestination] = useState({ x: 0, y: 0 });\n  const [passenger, setPassenger] = useState(null);\n  const [happyFactor, setHappyFactor] = useState(0);\n  const [speed, setSpeed] = useState(1);\n  const ballRef = useRef(null);\n\n  useEffect(() => {\n    setRandomSpawnPosition();\n    setRandomDestination();\n  }, []);\n\n  // useEffect(() => {\n  //   moveTo(destination);\n  // }, [destination]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (position.x !== destination.x || position.y !== destination.y) {\n        moveTo(ballRef.current, position, destination, ballRef, setPosition);\n      }\n    }, 100);\n    return () => clearInterval(intervalId);\n  }, [position, destination]);\n\n  function setRandomDestination() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setDestination({ x, y });\n  }\n\n  function setRandomSpawnPosition() {\n    const x = Math.floor(Math.random() * 200);\n    const y = Math.floor(Math.random() * 200);\n    setPosition({ x, y });\n  }\n\n  return (\n    <div>\n      <div className={styles.driver} ref={ballRef}></div>\n    </div>\n  );\n}\n\nexport default Driver;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAAEU,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC9D,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMoB,OAAO,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACdoB,sBAAsB,EAAE;IACxBC,oBAAoB,EAAE;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACArB,SAAS,CAAC,MAAM;IACd,MAAMsB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIhB,QAAQ,CAACE,CAAC,KAAKE,WAAW,CAACF,CAAC,IAAIF,QAAQ,CAACG,CAAC,KAAKC,WAAW,CAACD,CAAC,EAAE;QAChER,MAAM,CAACiB,OAAO,CAACK,OAAO,EAAEjB,QAAQ,EAAEI,WAAW,EAAEQ,OAAO,EAAEX,WAAW,CAAC;MACtE;IACF,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMiB,aAAa,CAACH,UAAU,CAAC;EACxC,CAAC,EAAE,CAACf,QAAQ,EAAEI,WAAW,CAAC,CAAC;EAE3B,SAASU,oBAAoBA,CAAA,EAAG;IAC9B,MAAMZ,CAAC,GAAGiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IACzC,MAAMlB,CAAC,GAAGgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IACzChB,cAAc,CAAC;MAAEH,CAAC;MAAEC;IAAE,CAAC,CAAC;EAC1B;EAEA,SAASU,sBAAsBA,CAAA,EAAG;IAChC,MAAMX,CAAC,GAAGiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IACzC,MAAMlB,CAAC,GAAGgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;IACzCpB,WAAW,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC;EACvB;EAEA,oBACEN,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAK0B,SAAS,EAAEjC,MAAM,CAACkC,MAAO;MAACC,GAAG,EAAEb;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;AAEV;AAAC9B,EAAA,CA1CQD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}