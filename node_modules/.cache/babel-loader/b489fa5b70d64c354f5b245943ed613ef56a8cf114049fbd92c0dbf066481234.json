{"ast":null,"code":"var _jsxFileName = \"/Users/valu/Desktop/TESTSDS/my-app/src/agents/Driver.js\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Screen(props) {\n  _s();\n  const numDrivers = 4;\n  const [drivers, setDrivers] = useState([]);\n  useEffect(() => {\n    createDrivers(numDrivers);\n  }, []);\n  function createDrivers(numDrivers) {\n    const newDrivers = [];\n    for (let i = 0; i < numDrivers; i++) {\n      const driver = new Driver(30);\n      newDrivers.push(driver);\n    }\n    setDrivers(newDrivers);\n  }\n  const driverList = drivers.map(driver => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Driver state: \", driver.state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Driver location: \", JSON.stringify(driver.location)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, driver.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: driverList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Screen, \"raR4BlYU6SFF+4kZd+KJRlHMG/I=\");\n_c = Screen;\nexport default Screen;\n\n// return (\n// <div>\n//   {/* Display driver state and location */}\n//   {/* <p>Driver state: {state}</p>\n//   <p>Driver location: {driverLocation}</p> */}\n\n//   {/* Display passenger information if there is a passenger */}\n//   {passenger && (\n//     <div>\n//       <p>Passenger location: {passenger.location}</p>\n//       <p>Passenger destination: {passenger.destination}</p>\n//     </div>\n//   )}\n\n//   {/* Button to simulate picking up a passenger */}\n//   {state === \"SEARCHING\" && (\n//     <button onClick={() => search({ location: 10, destination: 20 })}>\n//       Pick up passenger\n//     </button>\n//   )}\n\n//   {/* Button to simulate transit to passenger's destination */}\n//   {state === \"PICKUP\" && (\n//     <button onClick={() => pickUp(passenger)}>Start transit</button>\n//   )}\n\n//   {/* Button to simulate completing the ride */}\n//   {state === \"TRANSIT\" && <button onClick={transit}>Complete ride</button>}\n\n//   {/* Button to reset driver state and location */}\n//   {state === \"COMPLETED\" && <button onClick={completed}>Reset</button>}\n// </div>\n// );\n\n// const [earnings, setEarnings] = useState(0);\n// const [rating, setRating] = useState(0);\n// const [raining, setRaining] = useState(false);\n// const [traffic, setTraffic] = useState(false);\n// const [emotion, setEmotion] = useState(\"angry\");\n\n// function setSpawnLocation() {\n//   if (location) {\n//     return location;\n//   } else {\n//     return Math.floor(Math.random() * 100);\n//     // x: Math.floor(Math.random() * 100),\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["styles","React","useState","useEffect","jsxDEV","_jsxDEV","Screen","props","_s","numDrivers","drivers","setDrivers","createDrivers","newDrivers","i","driver","Driver","push","driverList","map","children","state","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","location","id","_c","$RefreshReg$"],"sources":["/Users/valu/Desktop/TESTSDS/my-app/src/agents/Driver.js"],"sourcesContent":["import styles from \"./styles.module.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Screen(props) {\n  const numDrivers = 4;\n  const [drivers, setDrivers] = useState([]);\n\n  useEffect(() => {\n    createDrivers(numDrivers);\n  }, []);\n\n  function createDrivers(numDrivers) {\n    const newDrivers = [];\n    for (let i = 0; i < numDrivers; i++) {\n      const driver = new Driver(30);\n      newDrivers.push(driver);\n    }\n    setDrivers(newDrivers);\n  }\n\n  const driverList = drivers.map((driver) => (\n    <div key={driver.id}>\n      <p>Driver state: {driver.state}</p>\n      <p>Driver location: {JSON.stringify(driver.location)}</p>\n    </div>\n  ));\n\n  return (\n    <div>\n      <h1>Simulation</h1>\n      <div>{driverList}</div>\n      {/* <div> {passengers}</div> */}\n    </div>\n  );\n}\n\nexport default Screen;\n\n// return (\n// <div>\n//   {/* Display driver state and location */}\n//   {/* <p>Driver state: {state}</p>\n//   <p>Driver location: {driverLocation}</p> */}\n\n//   {/* Display passenger information if there is a passenger */}\n//   {passenger && (\n//     <div>\n//       <p>Passenger location: {passenger.location}</p>\n//       <p>Passenger destination: {passenger.destination}</p>\n//     </div>\n//   )}\n\n//   {/* Button to simulate picking up a passenger */}\n//   {state === \"SEARCHING\" && (\n//     <button onClick={() => search({ location: 10, destination: 20 })}>\n//       Pick up passenger\n//     </button>\n//   )}\n\n//   {/* Button to simulate transit to passenger's destination */}\n//   {state === \"PICKUP\" && (\n//     <button onClick={() => pickUp(passenger)}>Start transit</button>\n//   )}\n\n//   {/* Button to simulate completing the ride */}\n//   {state === \"TRANSIT\" && <button onClick={transit}>Complete ride</button>}\n\n//   {/* Button to reset driver state and location */}\n//   {state === \"COMPLETED\" && <button onClick={completed}>Reset</button>}\n// </div>\n// );\n\n// const [earnings, setEarnings] = useState(0);\n// const [rating, setRating] = useState(0);\n// const [raining, setRaining] = useState(false);\n// const [traffic, setTraffic] = useState(false);\n// const [emotion, setEmotion] = useState(\"angry\");\n\n// function setSpawnLocation() {\n//   if (location) {\n//     return location;\n//   } else {\n//     return Math.floor(Math.random() * 100);\n//     // x: Math.floor(Math.random() * 100),\n//   }\n// }\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdS,aAAa,CAACH,UAAU,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,aAAaA,CAACH,UAAU,EAAE;IACjC,MAAMI,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACnC,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,EAAE,CAAC;MAC7BH,UAAU,CAACI,IAAI,CAACF,MAAM,CAAC;IACzB;IACAJ,UAAU,CAACE,UAAU,CAAC;EACxB;EAEA,MAAMK,UAAU,GAAGR,OAAO,CAACS,GAAG,CAAEJ,MAAM,iBACpCV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAG,gBAAc,EAACL,MAAM,CAACM,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnCpB,OAAA;MAAAe,QAAA,GAAG,mBAAiB,EAACM,IAAI,CAACC,SAAS,CAACZ,MAAM,CAACa,QAAQ,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,GAFjDV,MAAM,CAACc,EAAE;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAIpB,CAAC;EAEF,oBACEpB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBpB,OAAA;MAAAe,QAAA,EAAMF;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEnB;AAEV;AAACjB,EAAA,CA/BQF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAiCf,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}