{"ast":null,"code":"var _jsxFileName = \"/Users/valu/Desktop/TESTSDS/my-app/src/pages/Screen.js\",\n  _s = $RefreshSig$();\nimport styles from \"./styles.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Driver from \"../agents/Driver\";\nimport Passenger from \"../agents/Passenger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Screen(props) {\n  _s();\n  const numDrivers = 4;\n  const [drivers, setDrivers] = useState([]);\n  function createDrivers(numDrivers) {\n    const newDrivers = [];\n    for (let i = 0; i < numDrivers; i++) {\n      const driver = new Driver({\n        location: 30\n      });\n      newDrivers.push(driver);\n    }\n    setDrivers(newDrivers);\n  }\n  useEffect(() => {\n    createDrivers(numDrivers);\n  }, []);\n  const driverList = drivers.map(driver => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Driver state: \", driver.state]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Driver location: \", JSON.stringify(driver.location)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, driver.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n  console.log(\"drivers\", drivers);\n  console.log(\"driverlist\", driverList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: driverList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Screen, \"raR4BlYU6SFF+4kZd+KJRlHMG/I=\");\n_c = Screen;\nexport default Screen;\n{\n  /* <div>\n      {drivers.map((driver) => (\n        <div key={driver.id}>\n          <p>Driver state: {driver.state}</p>\n          <p>Driver location: {driver.location}</p>\n        </div>\n        \n      ))}</div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["styles","React","useState","useEffect","Driver","Passenger","jsxDEV","_jsxDEV","Screen","props","_s","numDrivers","drivers","setDrivers","createDrivers","newDrivers","i","driver","location","push","driverList","map","children","state","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","id","console","log","_c","$RefreshReg$"],"sources":["/Users/valu/Desktop/TESTSDS/my-app/src/pages/Screen.js"],"sourcesContent":["import styles from \"./styles.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Driver from \"../agents/Driver\";\nimport Passenger from \"../agents/Passenger\";\n\nfunction Screen(props) {\n  const numDrivers = 4;\n  const [drivers, setDrivers] = useState([]);\n\n  function createDrivers(numDrivers) {\n    const newDrivers = [];\n    for (let i = 0; i < numDrivers; i++) {\n      const driver = new Driver({ location: 30 });\n      newDrivers.push(driver);\n    }\n    setDrivers(newDrivers);\n  }\n\n  useEffect(() => {\n    createDrivers(numDrivers);\n  }, []);\n\n  const driverList = drivers.map((driver) => (\n    <div key={driver.id}>\n      <p>Driver state: {driver.state}</p>\n      <p>Driver location: {JSON.stringify(driver.location)}</p>\n    </div>\n  ));\n  console.log(\"drivers\", drivers);\n  console.log(\"driverlist\", driverList);\n  return (\n    <div>\n      <h1>Simulation</h1>\n      <div>{driverList}</div>\n      {/* <div> {passengers}</div> */}\n    </div>\n  );\n}\n\nexport default Screen;\n\n{\n  /* <div>\n      {drivers.map((driver) => (\n        <div key={driver.id}>\n          <p>Driver state: {driver.state}</p>\n          <p>Driver location: {driver.location}</p>\n        </div>\n        \n      ))}</div> */\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,SAAS,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASY,aAAaA,CAACH,UAAU,EAAE;IACjC,MAAMI,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACnC,MAAMC,MAAM,GAAG,IAAIb,MAAM,CAAC;QAAEc,QAAQ,EAAE;MAAG,CAAC,CAAC;MAC3CH,UAAU,CAACI,IAAI,CAACF,MAAM,CAAC;IACzB;IACAJ,UAAU,CAACE,UAAU,CAAC;EACxB;EAEAZ,SAAS,CAAC,MAAM;IACdW,aAAa,CAACH,UAAU,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,UAAU,GAAGR,OAAO,CAACS,GAAG,CAAEJ,MAAM,iBACpCV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAG,gBAAc,EAACL,MAAM,CAACM,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnCpB,OAAA;MAAAe,QAAA,GAAG,mBAAiB,EAACM,IAAI,CAACC,SAAS,CAACZ,MAAM,CAACC,QAAQ,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,GAFjDV,MAAM,CAACa,EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAIpB,CAAC;EACFI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpB,OAAO,CAAC;EAC/BmB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEZ,UAAU,CAAC;EACrC,oBACEb,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBpB,OAAA;MAAAe,QAAA,EAAMF;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEnB;AAEV;AAACjB,EAAA,CAhCQF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAkCf,eAAeA,MAAM;AAErB;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAPE;AAQD,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}